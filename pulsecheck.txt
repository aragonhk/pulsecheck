package main

import (
	"net/http"
	auth "pulsecheck/authentication"
	"pulsecheck/common"
	"pulsecheck/routehandler"

	"github.com/Sirupsen/logrus"
)

var apis = common.APIRoutes{
	auth.GetRoutes(),
}

//go:generate swagger generate spec

var log = logrus.New()

var ctx common.AppContext

func main() {
	ctx := common.AppContext{}

	router := routehandler.NewRouter(&ctx, apis, "/api/v1")
	log.WithFields(logrus.Fields{
		"package": "main",
		"action":  "loading",
	}).Fatal(http.ListenAndServe(":8080", router))

}

// func main() {
// 	http.HandleFunc("/", handle)
// 	http.HandleFunc("/_ah/health", healthCheckHandler)
// 	log.Print("Listening on port 8080")
// 	log.Fatal(http.ListenAndServe(":8080", nil))
// }
//
// func handle(w http.ResponseWriter, r *http.Request) {
// 	if r.URL.Path != "/" {
// 		http.NotFound(w, r)
// 		return
// 	}
// 	fmt.Fprint(w, "PulseCheck Under Construction")
// }
//
// func healthCheckHandler(w http.ResponseWriter, r *http.Request) {
// 	fmt.Fprint(w, "ok")
// }
